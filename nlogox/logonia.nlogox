<?xml version="1.0" encoding="utf-8"?>
<model version="NetLogo 7.0.0" snapToGrid="true">
  <code><![CDATA[; {Logônia}: Netlogia Brasiliensis Growth Response Model in NetLogo
;
; Version: 2025-09-11 0.0.0.9005
; Authors: Daniel Vartanian, Leandro Garcia, & Aline M. de Carvalho
; Maintainer: Daniel Vartanian <https://github.com/danielvartan>
; License: GPLv3 <https://www.gnu.org/licenses/gpl-3.0>
; Repository: <https://github.com/sustentarea/logonia>
;
; Require: NetLogo >= 7.0.0
; Required NetLogo extensions: `ls` & `string`
;
; Lines marked with `{LogoClim}` refer to code related to the {LogoClim} model.

__includes [
  "nls/logistic-regression.nls"
  "nls/random-between.nls"
  "nls/update-moving-average.nls"
  "nls/check-inspection.nls" ; {LogoClim}
  "nls/check-nan.nls" ; {LogoClim}
  "nls/check-start-year.nls" ; {LogoClim}
  "nls/combine.nls" ; {LogoClim}
  "nls/inspect-climate-vars.nls" ; {LogoClim}
  "nls/setup-logoclim.nls" ; {LogoClim}
  "nls/setup-patches.nls" ; {LogoClim}
  "nls/setup-variables.nls" ; {LogoClim}
  "nls/setup-world.nls" ; {LogoClim}
  "nls/show-values.nls" ; {LogoClim}
  "nls/update-climate-vars.nls" ; {LogoClim}
]

extensions [
  ls
  string
]

globals [
  seedling-12
  juvenile-12
  adult-12
  plot-x-max-range
  index ; {LogoClim}
  month ; {LogoClim}
  year ; {LogoClim}
  tmin-ls-model ; {LogoClim}
  tmax-ls-model ; {LogoClim}
  prec-ls-model ; {LogoClim}
  patch-coordinates ; {LogoClim}
  inspection ; {LogoClim}
  settings ; {LogoClim}
]

breed [logonias logonia]

patches-own [
  probability
  tmin ; {LogoClim}
  tmin-12 ; {LogoClim}
  tmin-12ma ; {LogoClim}
  tmax ; {LogoClim}
  tmax-12 ; {LogoClim}
  tmax-12ma ; {LogoClim}
  prec ; {LogoClim}
  prec-12 ; {LogoClim}
  prec-12ma ; {LogoClim}
  latitude ; {LogoClim}
  longitude ; {LogoClim}
]

logonias-own [
  age
  phase
  energy
]

to setup
  clear-all

  assert-start-year ; {LogoClim}
  assert-inspection

  if (
    (test-start-year = false) or ; {LogoClim}
    (test-inspection = false) ; {LogoClim}
  ) [
    stop
  ]

  ls:reset ; {LogoClim}

  setup-logoclim ; {LogoClim}
  setup-world ; {LogoClim}
  setup-variables ; {LogoClim}
  setup-patches ; {LogoClim}

  ifelse (inspection = true) [
    inspect-climate-vars ; {LogoClim}
  ] [
    ask patches [
      set pcolor gray + 4
      set probability compute-growth-probability self
    ]

    create-logonias initial-logonias [
      let #chance random-float 1

      (ifelse (#chance <= 0.2) [
        set #chance random-between 30 50

        set age #chance
        set phase "adult"
        set shape "adult"
        set energy #chance
      ] ((#chance > 0.2) and (#chance <= 0.5)) [
        set #chance random-between 10 30

        set age #chance
        set phase "juvenile"
        set shape "juvenile"
        set energy #chance
      ] [
        set #chance random-between 1 10

        set age #chance
        set phase "seedling"
        set shape "seedling"
        set energy #chance
      ])

      set size 2
      setxy random-pxcor random-pycor

      while [any? other turtles-here] [
        setxy random-pxcor random-pycor
      ]

      colorize

      ask patch-here [set pcolor brown + 3]
      set ycor ycor + 1
    ]

    update-moving-average
  ]

  plot-sigmoid

  reset-ticks
end

to go
  if ((month = "December") and (year = 2024)) [ ; {LogoClim}
      stop
  ]

  ls:ask ls:models [go true] ; {LogoClim}

  set index [index] ls:of tmin-ls-model ; {LogoClim}
  set month [month] ls:of tmin-ls-model ; {LogoClim}
  set year [year] ls:of tmin-ls-model ; {LogoClim}

  update-climate-vars ; {LogoClim}

  set plot-x-max-range ceiling ((ticks + 1) * 1.25)

  ifelse (inspection = true) [ ; {LogoClim}
    inspect-climate-vars
  ] [
    ask patches [
      set probability compute-growth-probability self
    ]

    ask logonias [
      grow
      reproduce
      senesce

      if ((energy = 0) or (age >= 100)) [
        die
      ]
    ]

    update-moving-average

    if (not any? logonias) [stop]
  ]

  tick
end

to grow
  let #prob-growth [probability] of patch-here

  (ifelse (random-float 1 <= #prob-growth) [
    set energy energy + energy-gain
  ] (#prob-growth < 0.25) [
    set energy energy - 1
  ])

  (ifelse (
    (phase = "seedling") and
    ((energy >= 10) and (energy < 30))
  ) [
    set phase "juvenile"
    set shape "juvenile"
  ] ((phase = "juvenile") and (energy >= 30)) [
    set phase "adult"
    set shape "adult"
  ])
end

to reproduce
  if (
    (phase = "adult") and
    (energy >= 30) and
    (random-float 1 <= (reproduction-rate / 100))
  ) [
    hatch 1 [
      set age 0
      set phase "seedling"
      set shape "seedling"
      set energy 1

      set size 2
      setxy random-pxcor random-pycor

      ifelse (any? other turtles-here) [
        die
      ] [
        ask patch-here [set pcolor brown + 3]
        set ycor ycor + 1
      ]
    ]
  ]
end

to senesce
  set age age + 1

  colorize
end

to colorize
  let #colors [65 54.9 54.6 42.7 35]

  (ifelse (age < 10) [
    set color item 0 #colors
  ] ((age >= 10) and (age < 40)) [
    set color item 1 #colors
  ] ((age >= 40) and (age < 70)) [
    set color item 2 #colors
  ] ((age >= 70) and (age < 90)) [
    set color item 3 #colors
  ] [
    set color item 4 #colors
  ])
end
]]></code>
  <widgets>
    <view x="270" wrappingAllowedX="true" y="10" frameRate="30.0" minPycor="-22" height="552" showTickCounter="true" patchSize="12.27450980392157" fontSize="14" wrappingAllowedY="true" width="626" tickCounterLabel="Months" maxPycor="22" updateMode="0" maxPxcor="25" minPxcor="-25"></view>
    <button x="10" actionKey="S" y="10" height="40" disableUntilTicks="false" forever="false" kind="Observer" width="125" display="Setup">setup</button>
    <button x="140" actionKey="G" y="10" height="40" disableUntilTicks="false" forever="true" kind="Observer" width="120" display="Go">go</button>
    <chooser x="10" y="55" height="60" variable="start-month" current="0" width="250" display="start-month">
      <choice type="string" value="January"></choice>
      <choice type="string" value="February"></choice>
      <choice type="string" value="March"></choice>
      <choice type="string" value="April"></choice>
      <choice type="string" value="May"></choice>
      <choice type="string" value="June"></choice>
      <choice type="string" value="July"></choice>
      <choice type="string" value="August"></choice>
      <choice type="string" value="September"></choice>
      <choice type="string" value="October"></choice>
      <choice type="string" value="November"></choice>
      <choice type="string" value="December"></choice>
    </chooser>
    <input x="10" multiline="false" y="120" height="60" variable="start-year" type="number" width="250">1951.0</input>
    <slider x="10" step="1" y="185" max="100" width="250" display="initial-logonias" height="50" min="0" direction="Horizontal" default="30.0" variable="initial-logonias"></slider>
    <slider x="10" step="0.1" y="240" max="100" width="250" display="reproduction-rate" height="50" min="1" direction="Horizontal" default="20.0" variable="reproduction-rate" units="%"></slider>
    <slider x="10" step="0.1" y="295" max="5" width="250" display="energy-gain" height="50" min="1" direction="Horizontal" default="2.0" variable="energy-gain"></slider>
    <slider x="10" step="0.01" y="350" max="100" width="250" display="intercept" height="50" min="-300" direction="Horizontal" default="-222.5" variable="intercept"></slider>
    <slider x="10" step="0.01" y="405" max="3" width="250" display="beta-tmin" height="50" min="-3" direction="Horizontal" default="0.35" variable="beta-tmin"></slider>
    <slider x="10" step="0.01" y="460" max="3" width="250" display="beta-tmax" height="50" min="-3" direction="Horizontal" default="0.45" variable="beta-tmax"></slider>
    <slider x="10" step="0.01" y="515" max="3" width="250" display="beta-prec" height="50" min="-3" direction="Horizontal" default="1.0" variable="beta-prec"></slider>
    <monitor x="905" precision="0" y="10" height="60" fontSize="11" width="250" display="Data Series">ifelse-value
  ((settings = 0))
  ["NA"]
  ["Historical monthly weather data"]</monitor>
    <monitor x="1160" precision="0" y="10" height="60" fontSize="11" width="125" display="Month">ifelse-value
  ((settings = 0))
  ["NA"]
  [month]</monitor>
    <monitor x="1290" precision="0" y="10" height="60" fontSize="11" width="120" display="Year">ifelse-value
  ((settings = 0))
  ["NA"]
  [year]</monitor>
    <plot x="905" autoPlotX="true" yMax="0.0" autoPlotY="true" yAxis="Frequency" y="75" xMin="0.0" height="300" legend="true" xMax="0.0" yMin="0.0" width="505" xAxis="Months" display="Logônias">
      <setup></setup>
      <update>ifelse (inspection = true) [
  clear-plot
] [
  set-plot-x-range 0 plot-x-max-range
]</update>
      <pen interval="1.0" mode="0" display="(Year Indicator)" color="-16777216" legend="false">
        <setup></setup>
        <update>ifelse (inspection = true) [
  clear-plot
] [
  ifelse ((start-month = month) or (index = 1)) [
    set-plot-pen-color black
  ] [
    set-plot-pen-color white
  ]

  plot 1
]</update>
      </pen>
      <pen interval="1.0" mode="0" display="Seedling" color="-2754856" legend="true">
        <setup></setup>
        <update>ifelse (inspection = true) [
  clear-plot
] [
  plot count logonias with [shape = "seedling"]
]</update>
      </pen>
      <pen interval="1.0" mode="0" display="Seedling 12MA" color="-13840069" legend="true">
        <setup></setup>
        <update><![CDATA[ifelse (inspection = true) [
  clear-plot
] [
  ifelse (index >= 11) [
    set-plot-pen-color lime
    plot mean seedling-12
  ] [
    set-plot-pen-color lime + 4
    plot count logonias with [shape = "seedling"]
  ]
]]]></update>
      </pen>
      <pen interval="1.0" mode="0" display="Juvenile" color="-263210" legend="true">
        <setup></setup>
        <update>ifelse (inspection = true) [
  clear-plot
] [
  plot count logonias with [shape = "juvenile"]
]</update>
      </pen>
      <pen interval="1.0" mode="0" display="Juvenile 12MA" color="-7171555" legend="true">
        <setup></setup>
        <update><![CDATA[ifelse (inspection = true) [
  clear-plot
] [
  ifelse (index >= 11) [
    set-plot-pen-color yellow - 2
    plot mean juvenile-12
  ] [
    set-plot-pen-color yellow + 4
    plot count logonias with [shape = "juvenile"]
  ]
]]]></update>
      </pen>
      <pen interval="1.0" mode="0" display="Adult" color="-1318182" legend="true">
        <setup></setup>
        <update>ifelse (inspection = true) [
  clear-plot
] [
  plot count logonias with [shape = "adult"]
]</update>
      </pen>
      <pen interval="1.0" mode="0" display="Adult 12MA" color="-6459832" legend="true">
        <setup></setup>
        <update><![CDATA[ifelse (inspection = true) [
  clear-plot
] [
  ifelse (index >= 11) [
    set-plot-pen-color brown
    plot mean adult-12
  ] [
    set-plot-pen-color brown + 4
    plot count logonias with [shape = "adult"]
  ]
]]]></update>
      </pen>
    </plot>
    <monitor x="905" precision="0" y="380" height="60" fontSize="11" width="165" display="Seedling">count logonias with [phase = "seedling"]</monitor>
    <monitor x="1075" precision="0" y="380" height="60" fontSize="11" width="165" display="Juvenile">count logonias with [phase = "juvenile"]</monitor>
    <monitor x="1245" precision="0" y="380" height="60" fontSize="11" width="165" display="Adult">count logonias with [phase = "adult"]</monitor>
    <plot x="905" autoPlotX="false" yMax="0.0" autoPlotY="true" yAxis="Frequency" y="445" xMin="0.0" height="120" legend="false" xMax="1.0" yMin="0.0" width="400" xAxis="Probability" display="Growth Probability">
      <setup></setup>
      <update></update>
      <pen interval="0.1" mode="1" display="Growth Prob." color="-16777216" legend="true">
        <setup></setup>
        <update>ifelse (inspection = true) [
  clear-plot
] [
  histogram [probability] of patches
]</update>
      </pen>
    </plot>
    <monitor x="1310" precision="5" y="445" height="120" fontSize="11" width="100" display="Mean G. P.">mean [probability] of patches with [not is-nan? tmin]</monitor>
    <note x="10" y="640" backgroundDark="0" fontSize="15" width="1400" markdown="true" height="26" textColorDark="-1" textColorLight="-16777216" backgroundLight="0"><![CDATA[<div style="text-align: center;">Climate Variables Inspection</div>]]></note>
    <button x="205" y="675" height="60" disableUntilTicks="false" forever="true" kind="Observer" width="135" display="Show Values">show-values</button>
    <switch x="345" y="675" height="60" on="false" variable="inspect-tmin" width="120" display="inspect-tmin"></switch>
    <switch x="470" y="675" height="60" on="false" variable="inspect-tmax" width="120" display="inspect-tmax"></switch>
    <switch x="595" y="675" height="60" on="false" variable="inspect-prec" width="115" display="inspect-prec"></switch>
    <plot x="205" autoPlotX="true" yMax="40.0" autoPlotY="true" yAxis="Global Mean" y="740" xMin="0.0" height="240" legend="true" xMax="0.0" yMin="15.0" width="505" xAxis="Months" display="Average Temperature (°C)">
      <setup></setup>
      <update>set-plot-x-range 0 plot-x-max-range</update>
      <pen interval="1.0" mode="0" display="(Year Indicator)" color="-16777216" legend="false">
        <setup></setup>
        <update>ifelse ((start-month = month) or (index = 1)) [
  set-plot-pen-color black
] [
  set-plot-pen-color white
]

plot 16</update>
      </pen>
      <pen interval="1.0" mode="0" display="Minimum" color="-2166824" legend="true">
        <setup></setup>
        <update>plot mean [tmin] of patches with [not is-nan? tmin]</update>
      </pen>
      <pen interval="1.0" mode="0" display="Min. 12MA" color="-13840069" legend="true">
        <setup></setup>
        <update><![CDATA[ifelse (index >= 11) [
  set-plot-pen-color lime
  plot mean [tmin-12ma] of patches with [not is-nan? tmin]
] [
  set-plot-pen-color lime + 4
  plot mean [tmin] of patches with [not is-nan? tmin]
]]]></update>
      </pen>
      <pen interval="1.0" mode="0" display="Maximum" color="-1318182" legend="true">
        <setup></setup>
        <update>plot mean [tmax] of patches with [not is-nan? tmax]</update>
      </pen>
      <pen interval="1.0" mode="0" display="Max. 12MA" color="-6459832" legend="true">
        <setup></setup>
        <update><![CDATA[ifelse (index >= 11) [
  set-plot-pen-color brown
  plot mean [tmax-12ma] of patches with [not is-nan? tmax]
] [
  set-plot-pen-color brown + 4
  plot mean [tmax] of patches with [not is-nan? tmax]
]]]></update>
      </pen>
    </plot>
    <monitor x="715" precision="5" y="675" height="60" fontSize="11" width="165" display="Global Mean tmin (°C)">mean [tmin] of patches with [not is-nan? tmin]</monitor>
    <monitor x="885" precision="5" y="675" height="60" fontSize="11" width="160" display="Global Mean tmax (°C)">mean [tmax] of patches with [not is-nan? tmax]</monitor>
    <monitor x="1050" precision="5" y="675" height="60" fontSize="11" width="170" display="Global Mean prec (mm)">mean [prec] of patches with [not is-nan? prec]</monitor>
    <plot x="715" autoPlotX="true" yMax="0.0" autoPlotY="true" yAxis="Global Mean" y="740" xMin="0.0" height="240" legend="true" xMax="0.0" yMin="0.0" width="505" xAxis="Months" display="Total Precipitation (mm)">
      <setup></setup>
      <update>set-plot-x-range 0 plot-x-max-range</update>
      <pen interval="1.0" mode="0" display="(Year Indicator)" color="-16777216" legend="false">
        <setup></setup>
        <update>ifelse ((start-month = month) or (index = 1)) [
  set-plot-pen-color black
] [
  set-plot-pen-color white
]

plot 1</update>
      </pen>
      <pen interval="1.0" mode="0" display="Precipitation" color="-1513240" legend="true">
        <setup></setup>
        <update>plot mean [prec] of patches with [not is-nan? prec]</update>
      </pen>
      <pen interval="1.0" mode="0" display="Prec. 12MA" color="-16777216" legend="true">
        <setup></setup>
        <update><![CDATA[ifelse (index >= 11) [
  set-plot-pen-color black
  plot mean [prec-12ma] of patches with [not is-nan? prec]
] [
  set-plot-pen-color gray + 4
  plot mean [prec] of patches with [not is-nan? prec]
]]]></update>
      </pen>
    </plot>
    <note x="10" y="1000" backgroundDark="0" fontSize="15" width="1400" markdown="true" height="26" textColorDark="-1" textColorLight="-16777216" backgroundLight="0"><![CDATA[<div style="text-align: center;">Logistic Regression Inspection</div>]]></note>
    <button x="205" y="1035" height="60" disableUntilTicks="false" forever="true" kind="Observer" width="250" display="Plot Sigmoid">plot-sigmoid</button>
    <chooser x="205" y="1100" height="110" variable="x-axis" current="0" width="250" display="x-axis">
      <choice type="string" value="Intercept"></choice>
      <choice type="string" value="Average Minimum Temperature (°C)"></choice>
      <choice type="string" value="Average Maximum Temperature (°C)"></choice>
      <choice type="string" value="Total Precipitation (mm)"></choice>
    </chooser>
    <slider x="205" step="1" y="1215" max="499" width="250" display="min-x" height="60" min="-500" direction="Horizontal" default="-235.0" variable="min-x"></slider>
    <slider x="205" step="1" y="1280" max="500" width="250" display="max-x" height="60" min="-499" direction="Horizontal" default="-200.0" variable="max-x"></slider>
    <plot x="460" autoPlotX="true" yMax="1.25" autoPlotY="false" yAxis="Probability" y="1100" xMin="0.0" height="240" legend="false" xMax="0.0" yMin="-0.25" width="760" xAxis="Variable (x-axis)" display="Sigmoid">
      <setup></setup>
      <update></update>
      <pen interval="1.0" mode="0" display="Function" color="-16777216" legend="true">
        <setup></setup>
        <update></update>
      </pen>
    </plot>
    <slider x="460" step="0.01" y="1035" max="500" width="185" display="intercept" height="60" min="-500" direction="Horizontal" default="-222.5" variable="intercept"></slider>
    <slider x="650" step="0.01" y="1035" max="26" width="185" display="inspection-tmin" height="60" min="16" direction="Horizontal" default="22.32" variable="inspection-tmin"></slider>
    <slider x="840" step="0.01" y="1035" max="37.25" width="185" display="inspection-tmax" height="60" min="27" direction="Horizontal" default="31.22" variable="inspection-tmax"></slider>
    <slider x="1030" step="0.01" y="1035" max="1059.29" width="190" display="inspection-prec" height="60" min="2.89" direction="Horizontal" default="194.61" variable="inspection-prec"></slider>
  </widgets>
  <info><![CDATA[> Development version (WIP).


# {LOGÔNIA}: *NETLOGIA BRASILIENSIS* GROWTH RESPONSE MODEL

## WHAT IS IT?

`Logônia` is a [NetLogo](https://www.netlogo.org) model for simulating the growth response of a fictional plant named Logônia (*netlogia brasiliensis*) to different climatic conditions. The model incorporates climate data from [WorldClim 2.1](https://worldclim.org/) and serves as fun example on how to integrate the [`LogoClim`](https://github.com/sustentarea/logoclim) model into other NetLogo models using the NetLogo [`LevelSpace`](https://ccl.northwestern.edu/netlogo/docs/ls.html) extension.

## HOW IT WORKS

`Logônia` runs on a grid of patches, where each patch represents a piece of soil that can host a logônia plant. Each patch corresponds to a specific geographic area and stores historical climate data.

A logônia plant develops through three growth phases: *seedling*, *juvenile*, and *adult*. Each phase has distinct traits, such as shape, color, and energy levels. Plant growth, reproduction, and senescence (shown by color fading) are influenced by the climate conditions of the patch it occupies.

![Logônia Sizes](logonia-sizes)

Once a logônia reaches the adult phase, it can reproduce asexually by establishing new plants in unoccupied patches. The probability of growth is determined by a [logistic regression](https://en.wikipedia.org/wiki/Logistic_regression) model that incorporates the patch’s climate variables. If conditions are favorable, the plant gains energy and grows; otherwise, it may remain the same or lose energy, eventually dying. Plants die either when they run out of energy or when they reach their maximum age (100 months).

### CLIMATE DATA

This model illustrates how climate data from [WorldClim 2.1](https://worldclim.org/) can be integrated into NetLogo through the [`LogoClim`](https://github.com/sustentarea/logoclim) NetLogo model. Climate conditions directly affect species growth, adding complexity to the simulation.

The dataset comes from the *Historical Monthly Weather Data* series of [WorldClim 2.1](https://worldclim.org/) (1951-2024) ([Fick & Hijmans, 2017](https://doi.org/10.1002/joc.5086)) for a selected region of the **Amazon forest**. This series includes 12 monthly data points for each year from 1951 to 2024, based on [downscaled](https://worldclim.org/data/downscaling.html) data from [CRU-TS-4.09](https://crudata.uea.ac.uk/cru/data/hrg/cru_ts_4.09/), developed by the [Climatic Research Unit](https://www.uea.ac.uk/groups-and-centres/climatic-research-unit) at the [University of East Anglia](https://www.uea.ac.uk/) ([Harris et al., 2020](https://doi.org/10.1038/s41597-020-0453-3)). Variables include *average minimum temperature (°C)* (**A**), *average maximum temperature (°C)* (**B**), and *total precipitation (mm)* (**C**).

![WorldClim Animation](worldclim-animation)

The dataset can be reproduced using the Quarto notebooks in the `qmd` folder of this repository, adapted from those of the [`LogoClim`](https://github.com/sustentarea/logoclim) model.

### GROWTH PROBABILITY

![Logônia Sizes](sigmoid)

### GROWTH PHASES

### REPRODUCTION

### SENESCENCE

## HOW TO USE IT

### SETUP

`Logônia` was developed using NetLogo 7.0.0, so it is recommended to use this version or later.

The model relies on the NetLogo extensions `LevelSpace` ([`ls`](https://ccl.northwestern.edu/netlogo/docs/ls.html)) and `String` ([`string`](https://github.com/NetLogo/String-Extension)). These extensions are installed automatically when the model is run for the first time.

Once everything is set up, just click `Setup` and then `Go` to start exploring! No additional installation steps are required.

### INTERFACE CONTROLS

#### CHOOSERS, INPUT BOXES, AND SLIDERS

- **`data-series`**: Chooser for selecting a data series (default: `Historical monthly weather data`).
- **`data-resolution`**: Chooser for selecting the spatial resolution of the data, expressed in minutes of a degree of latitude/longitude (default: `10 minutes (~340 km2 at the equator)`).
- **`climate-variable`**: Chooser for selecting the climate variable (default: `Average maximum temperature (°C)`).
- **`global-climate-model`**: Chooser for selecting a global climate model. Only useful when *`Future climate data`* is selected (default: `CMCC-ESM2`).
- **`shared-socioeconomic-pathway`**: Chooser for selecting a Shared Socioeconomic Pathway ([SSP](https://climatedata.ca/resource/understanding-shared-socio-economic-pathways-ssps/)) scenario. Only useful when *`Future climate data`* is selected (default: `SSP-585`).
- **`bioclimatic-variable`**: Chooser for selecting a [bioclimatic variable](https://worldclim.org/data/bioclim.html). Only useful when *`climate-variable`* is set to *`bioclimatic-variables`* (default: `BIO1 - Annual mean temperature`).
- **`start-month`**: Chooser for selecting the simulation's starting month (default: `January`).
- **`start-year`**: Input box for setting the simulation's start year in `YYYY` format (default: `1951`).
- **`data-path`**: Input box for setting the path to the data folder. Usually, this does not need to be changed. Use the *`Select data directory`* button to navigate via a dialog window (default: `../data/`).
- **`historical-climate-color`**: Input box for setting the color used to represent the *historical climate data* series (default: `105 (blue)`).
- **`historical-monthly-weather-color`**: Input box for setting the color used to represent the *historical monthly weather data* series (default: `25 (orange)`).
- **`future-climate-color`**: Input box for setting the color used to represent the *future climate data* series (default: `15 red)`).
- **`black-value`**: Slider for setting the lower threshold for the black color on the map (default: `0`).
- **`black-min`**: Switch for setting the black color threshold to the minimum value of the current dataset. If it is set to *`On`*, *`black-value`* will be ignored (default: `Off`).
- **`white-value`**: Slider for setting the upper threshold for the white color on the map (default: `50`).
- **`white-max`**: Switch for setting the white color threshold to the maximum value of the current dataset. If it is set to *`On`*, *`white-value`* will be ignored (default: `On`).

#### BUTTONS

- **`Setup`**: Initializes the simulation with the selected parameters.
- **`Go`**: Starts or resumes the simulation.
- **`Go back`**: Steps the simulation backward in time.
- **`Go forward`**: Steps the simulation forward in time.
- **`Select data directory`**: Opens a dialog window, allowing the user to indicate the data directory.
- **`Show values`**: Displays patch values when hovering the mouse over them.

### MONITORS AND PLOTS

- **`Climate variable`**: Displays the climate variable being used.
- **`Bioclimatic variable`**: Displays the bioclimatic variable being used. Works only when *`climate-variable`* is set to *`bioclimatic-variables`*.
- **`Year`**, **`Month`**: Displays the current year and month being simulated.
- **`Min`**, **`Max`**, **`Mean`**, **`SD`**: Monitors showing the minimum, maximum, mean, and standard deviation values for the climate variable across the patches.
- **`Plots`**: Graphs for mean, minimum, maximum, and standard deviation against time.

### PATCH ATTRIBUTES

- **`value`**: A number representing the series value at the patch point.
- **`latitude`**: A `list` of two numbers indicating the minimum and maximum latitude of the patch point.
- **`longitude`**: A `list` of two numbers indicating the minimum and maximum longitude of the patch point.

### LOGÔNIA ATTRIBUTES

- **`value`**: A number representing the series value at the patch point.
- **`latitude`**: A `list` of two numbers indicating the minimum and maximum latitude of the patch point.
- **`longitude`**: A `list` of two numbers indicating the minimum and maximum longitude of the patch point.

## MODEL INSPECTION

### CLIMATE VARIABLES

#### INTERFACE CONTROLS

#### COLOR SCALE

The model uses a color scale ranging from black (representing the lowest value) to white (representing the highest value). Black and white colors represent the minimum or maximum value of the current data. Each series is represented with an unique color.

### LOGISTIC REGRESSION

#### INTERFACE CONTROLS

## THINGS TO NOTICE

- Observe the changes in the map as the simulation progresses, particularly how the colors (values) vary over time and space.
- Pay attention to the plots and monitors to see trends and variation in the climate variable across different time periods.
- Notice the differences when switching between historical data and future projections, especially for different SSP scenarios.

## THINGS TO TRY

- Change the starting year and month to observe how the system evolution differs based on initial conditions.
- Experiment with different parameters in reproduction and energy gain to see how they affect plant growth and distribution.
- Experiment with different parameters for the logistic regression model (intercept and beta coefficients) to see how they affect plant growth and distribution.

## HOW TO CITE

To cite `Logônia` please use the following format:

Vartanian, D., Garcia, L., & Carvalho, A. M. (2025). *{Logônia}: Netlogia brasiliensis growth response model* \[Computer software\]. <https://doi.org/10.17605/OSF.IO/TPY7S>

A BibTeX entry for LaTeX users is:

``` latex
@Misc{vartanian2025,
  title = {{Logônia}: <span class="italic">Netlogia brasiliensis</span> growth response model},
  author = {{Daniel Vartanian} and {Leandro Garcia} and {Aline Martins de Carvalho}},
  year = {2025},
  doi = {10.17605/OSF.IO/TPY7S},
  note = {Computer software}
}
```

## IMPORTANT LINKS

- OSF repository: https://doi.org/10.17605/OSF.IO/TPY7S
- Code repository: https://github.com/sustentarea/logonia
- Latest release: https://github.com/sustentarea/logonia/releases/latest

## LICENSE

![GPLv3 license badge](gplv3-license-badge)

```text
Copyright (C) 2025 Daniel Vartanian

{Logônia} is free software: you can redistribute it and/or modify it under the
terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program. If not, see <https://www.gnu.org/licenses/>.
```

## ACKNOWLEDGMENTS

We gratefully acknowledge [Stephen E. Fick](https://orcid.org/0000-0002-3548-6966), [Robert J. Hijmans](https://orcid.org/0000-0001-5872-2872), and the entire [WorldClim](https://worldclim.org/) team for their outstanding work in creating and maintaining the WorldClim datasets, which form the foundation of this project.

We thank the [Climatic Research Unit](https://www.uea.ac.uk/groups-and-centres/climatic-research-unit) at the [University of East Anglia](https://www.uea.ac.uk/) and the United Kingdom's [Met Office](https://www.metoffice.gov.uk/) for developing and providing access to the [CRU-TS-4.09](https://crudata.uea.ac.uk/cru/data/hrg/cru_ts_4.09/) dataset, a vital source of historical climate data.

![Sustentarea logo](sustentarea-logo)

This work was developed with support from the [Sustentarea](https://github.com/sustentarea/) Research and Extension Center at the University of São Paulo ([USP](https://www.usp.br/)).

![CNPq logo](cnpq-logo)

This work was supported by the Department of Science and Technology of the Secretariat of Science, Technology, and Innovation and of the Health Economic-Industrial Complex ([SECTICS](https://www.gov.br/saude/pt-br/composicao/sectics)) of the [Ministry of Health](https://www.gov.br/saude/en) of Brazil, and the National Council for Scientific and Technological Development ([CNPq](https://www.gov.br/cnpq/)) (grant no. 444588/2023-0).

## REFERENCES

Fick, S. E., & Hijmans, R. J. (2017). WorldClim 2: New 1-km spatial resolution climate surfaces for global land areas. *International Journal of Climatology*, *37*(12), 4302-4315. [https://doi.org/10.1002/joc.5086](https://doi.org/10.1002/joc.5086)

Harris, I., Osborn, T. J., Jones, P., & Lister, D. (2020). Version 4 of the CRU TS monthly high-resolution gridded multivariate climate dataset. *Scientific Data*, *7*(1), 109. [https://doi.org/10.1038/s41597-020-0453-3](https://doi.org/10.1038/s41597-020-0453-3)

Vartanian, D., Garcia, L., & Carvalho, A. M. (2025). *LogoClim: WorldClim in NetLogo* \[Computer software\]. [https://doi.org/10.17605/OSF.IO/EAPZU](https://doi.org/10.17605/OSF.IO/EAPZU)]]></info>
  <turtleShapes>
    <shape name="default" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="5"></point>
        <point x="40" y="250"></point>
        <point x="150" y="205"></point>
        <point x="260" y="250"></point>
      </polygon>
    </shape>
    <shape name="adult" rotatable="false" editableColorIndex="0">
      <rectangle endX="165" startY="90" marked="true" color="-1920102913" endY="300" startX="135" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="255"></point>
        <point x="90" y="210"></point>
        <point x="45" y="195"></point>
        <point x="75" y="255"></point>
        <point x="135" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="255"></point>
        <point x="210" y="210"></point>
        <point x="255" y="195"></point>
        <point x="225" y="255"></point>
        <point x="165" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="180"></point>
        <point x="90" y="135"></point>
        <point x="45" y="120"></point>
        <point x="75" y="180"></point>
        <point x="135" y="210"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="180"></point>
        <point x="165" y="210"></point>
        <point x="225" y="180"></point>
        <point x="255" y="120"></point>
        <point x="210" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="105"></point>
        <point x="90" y="60"></point>
        <point x="45" y="45"></point>
        <point x="75" y="105"></point>
        <point x="135" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="105"></point>
        <point x="165" y="135"></point>
        <point x="225" y="105"></point>
        <point x="255" y="45"></point>
        <point x="210" y="60"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="90"></point>
        <point x="120" y="45"></point>
        <point x="150" y="15"></point>
        <point x="180" y="45"></point>
        <point x="165" y="90"></point>
      </polygon>
    </shape>
    <shape name="juvenile" rotatable="false" editableColorIndex="0">
      <rectangle endX="165" startY="165" marked="true" color="-1920102913" endY="300" startX="135" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="255"></point>
        <point x="90" y="210"></point>
        <point x="45" y="195"></point>
        <point x="75" y="255"></point>
        <point x="135" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="255"></point>
        <point x="210" y="210"></point>
        <point x="255" y="195"></point>
        <point x="225" y="255"></point>
        <point x="165" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="180"></point>
        <point x="90" y="135"></point>
        <point x="45" y="120"></point>
        <point x="75" y="180"></point>
        <point x="135" y="210"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="180"></point>
        <point x="165" y="210"></point>
        <point x="225" y="180"></point>
        <point x="255" y="120"></point>
        <point x="210" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="165"></point>
        <point x="120" y="120"></point>
        <point x="150" y="90"></point>
        <point x="180" y="120"></point>
        <point x="165" y="165"></point>
      </polygon>
    </shape>
    <shape name="seedling" rotatable="false" editableColorIndex="0">
      <rectangle endX="165" startY="240" marked="true" color="-1920102913" endY="300" startX="135" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="255"></point>
        <point x="90" y="210"></point>
        <point x="45" y="195"></point>
        <point x="75" y="255"></point>
        <point x="135" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="255"></point>
        <point x="210" y="210"></point>
        <point x="255" y="195"></point>
        <point x="225" y="255"></point>
        <point x="165" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="240"></point>
        <point x="120" y="195"></point>
        <point x="150" y="165"></point>
        <point x="180" y="195"></point>
        <point x="165" y="240"></point>
      </polygon>
    </shape>
  </turtleShapes>
  <linkShapes>
    <shape name="default" curviness="0.0">
      <lines>
        <line x="-0.2" visible="false">
          <dash value="0.0"></dash>
          <dash value="1.0"></dash>
        </line>
        <line x="0.0" visible="true">
          <dash value="1.0"></dash>
          <dash value="0.0"></dash>
        </line>
        <line x="0.2" visible="false">
          <dash value="0.0"></dash>
          <dash value="1.0"></dash>
        </line>
      </lines>
      <indicator>
        <shape name="link direction" rotatable="true" editableColorIndex="0">
          <line endX="90" startY="150" marked="true" color="-1920102913" endY="180" startX="150"></line>
          <line endX="210" startY="150" marked="true" color="-1920102913" endY="180" startX="150"></line>
        </shape>
      </indicator>
    </shape>
  </linkShapes>
  <previewCommands>setup repeat 75 [ go ]</previewCommands>
  <resources>
    <resource name="cnpq-logo" extension="png">iVBORw0KGgoAAAANSUhEUgAAAJYAAAAuCAYAAADKmOD6AAAABGdBTUEAALGPC/xhBQAAAAFzUkdCAdnJLH8AAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAOxAAADsQBlSsOGwAAEs1JREFUeNrtXGl0VFW2/va5Q2VgkjBDO4BDOyEqcRZQphbUB2hRhdqiLkIQleWztdH32n5Z3fZ6Djg8xiTFe+pzIEmJ2mjL1Cpoq83kgDii0AhhcACBQFL31j37/UhS1HDOTUJK7Kc5a90fyb117zlnf2fvb39n30vIcjPHlw8Ugs6HRH8QBjChCzF1BNAOxPvBqGbQZ0z8usFySayyeBPa2k+uUTZukje2rIdr0xSAriGiE1r0Y+Z3JOHJuLf/SUTvqGszSRuwgGvmdrKkPZ2YbwNRfmtuxczbmfCnuLesFNGobDPNzxRYgfHlQyWJJ4jQJ6s9Yv4bQU5sC5H/v5s4nB/ZofJ7mcSyrIMKAIguYhJrAuPLh7aZ52fjsUrIDvWaCxJT9B4HkoEVxPI1Aq1hcr4il2L1zN44Rgo6nkBDmGkYEbr73McFy7BTNfn5NjP9xD2WFep1nxZUzHXMPEO4dce5lZOGOl9vn+EBexn2BZ5pDvdMc7gUohu5/KbjLbve/WJ1H7AXBPB3DeQtkKgIhMp/1Wamn7DHssZHwiRogdq58OsGvBvrKnZ+FQj1uETCmEqEKwCydUQdhApyvXnOwp1fWqHeEwmYAaICxc33kIwVxqK3fNlmrp8YsHLDs3p6yNkAUGcFSGa4u6rvzunRracH678JNKL5RB0uwBFnX+3dgQ6BrkzizwCdprhuvbN7z/lYftfBNpP9hEKhx7kPa0D1gFtZdFegW8+LJdvrWwSqRLijqVaH3HVSiHxHuBcD/IHiuv52wVF3tZnrJ+SxrFBpf4L5HigVhAy87FZMusIORa4EURWAQCtlhu8YcrjlYIcbEGsJ1DvtihqLavodWHD7121m++dvZtPZv3FPhmdj7LEcrwjheQPAeFYLKuY6EL0P5k0A6hh0LBGfD1Cu4kEFYOMvgHeWYHkjk1gKUDLw27le3k0A7s/KyIeUBHK7di+Im2aB8GQBWJjSxC43LrcgWryvDRo/oMfKn/BYN5fzt2aScP43x6ueYRu931VzIv4e4D84sYP/gxdv35tybvhDeWZBp18TUEKgHpk/xVK3ctKv7HBkAUDhtCThY7ei6NTDGumVD7Szco4KEtFgJlxIoOP1zpM3EfHfWIpXXd5XpdtqsseXXg4ymtEf+aVTWfycf2SI/JqAXhm/BO2NV04qTTwzXP4bMJnNHzjXMqhWSGw24nLDwReKd/7owLJD5dNA4r/SQeNIp49J1vVCiLmKDPETA95ldRVTtvjdOydceozH5hIi/FJh2X8BnM+BwEfpIVhKWRivmry22SMc81hHK6fd3cQoBuGolkdo7CLi2Y63f0Y6wOxQZBWIzmnGPba5lZN+ob0gGBS2GPEdiDop5nOxW1E0CgByxs0+Wto5W1rFOMDVYFooZGzmD5lp+5J3JhqtwOLLiN5ygEhMUxnB8OTIRlDlT3ismx2KTLfDkQV2OPK0HZ5/O66Z2wkA6iqmbKG4NwbAQQXcf+tU3vIpgLcyOkzUbEXeCpX2t3Ly1xJw9+GAqj5CoztAf7RF+5UY/lBe4sRlM20QndHMe/QJhMr6avuJYaeoQFU/FbQqsajsQGHrPQn1JsI0NgKf2uPn33XkgTWkJECgwYowsSQQKuur8TS310WLtzaGCVfmbwTR/fUhja4F8Kjt2RvN8PzBAOAsLP4MLH+nGP6FgeCcfiCOZq44NGtyzWD5ICLzHb+Q10KEnWMVHHVv4v7tc/q3JGGRnDmXSQv4Au1jWa5KWriFWbS9CYEHrfGR8BEFltm1u3riWH6gmiRm3ujysioAsILlZ4CMKIg6KJZMFwH8OSdcegwAOAe4tJ6TpRlCWOcy4m8qujawaU9VdqYwxCIAeT7xaTUzPyilnMrA/Qx83ow4MjHprxYZmQQN0hpB0Pm6TsZizuqkuxRmGwBENP2IAouE1V81UPebHRuJaKCihwsT5S4G/R5EOT7P7SjZ+C0A4OXiWiYsV/TgDHfjexsA9tJceS/fEQUfOQoQLwDoqDGWJ8FTnMqic93Kounxqsnz3IpJ97g7t53CzI82EdJ6YsxjHevBIFpkZIaPx4LaYzHwOV68dXcjDyPC2T7c6R9grGs8GPwxwLXNiI0DECzrcORCIfHRiv/uwYqSGAMKIio/TTL+iKYnGsOTrv9IYcRuWFceB9O+DFE1OEdb+2WL9qVEdIwOVAy+IV5RVJZxakWJ58rq6UrOl5x0CLMBsKwDVkyTJR2XEyzLnLex87oS+AT1bzgRBm057AT9YgHY44lO5aSBjYdbUXSq4+3vzMwPNGULW3K3I6ljFSrAsBbBoADoTIUf+Kx+ZZVYANo1Ix3tnKZ3pROPQAPA4+nJa17cbH8QOJB+z0AwcgkTjffJzma6lZOf1nYqWuJyeP4OAvpp7rC/rlbuxJUPtANwsuYhz4DoJtUpz6DBAFKeb9vm+cgYfEJqOMSvLCrUp/DsxeGuyxzPHXUuSu6xQ30uB0Eri5iSapwMz19imdTjPBKiL7HoDcgahlzhVk5Zf9jAyh0X6e0BIzKdGJUGxLChnFaHxcwb49Gdq5KM8xUBRzfx7C8PYQjdKIPQ8nf1IEbGVtJBM75fOb0C/+nzvBpX7v9jUxPiVkxqkuybwfLzADLUjh6VknikYucAJDOBxcAFOsCQl1T5waLQRxzagOgtB9SnSphp/maCBlgMeXDPjm9SbG/hP1C/QDseEqUECAJ2KPKks692MgBYHfIWgdhQ4OR1JbA8G9enTxwztrlfrH7JPv6c/1W47KeAEk66+imA/r0Jl/V0kjHOSZ80IfFZjjH0FzLdgMx1qkmsTxjoXJ/g+xSid+zJCn8w9MQ9Zsh1thQrQbgmE/iZBJ6gywi51kX1h0lzXKiVHRmrtZ0dO68rMV+icYpg4k1YUeLVZ/KRyzxC1LfMnGii1TE3j6U3iwgj1X3ivwqFzGAwozhzAmQ5ThrQDsRj0n0/ufGUVege3H0/GO/7ZGQrHa+6tD58zekHxeR6wBpPinMU4Xir8p6G8E2bSeLFrBEIVhN3BjZjQfF3knmlJvyfmBue1TNVC+OBGrCsQ7TETdALwgAf8r9KIxkZlm3Oa+J9hL8AQCBUeikEXmzOuwsECpIwyvwkkgxg2d16Xp5BfhmuQbH5prRCin2+N2PPT92c8p9F02ucWM0QAI8DiCfdyGHwbGf396MaJ00Ke0bGBjdjW5yXrVElAQTSqe7n+QB5X2x/7Yqs4UpH3BnrAEB4amABQJwDCa9ldgwMUO6bpoHFEj1P011XT8a8VQq+eazVo89CIrqqibFUYkJZgYTxlK5+DsBBMN4G4yMwZIMdTtbxvVjd92vNzMUobs10bvxCbcVtO+xQ5MZ0z8fA0db4yLVuVdEzKSdevH2vA9yEMbPvNC37NJDkONMHyRu8Vqi8hIjGKDr3DGouNtER4xTLJdPtB4OCwGfrQgWDlmHxNCcrqJpQVkCM4zQrdV2j8GuFIztVe6FENBhAZT1rMS7QWzxZGKVC8tt8M8RLVigikzLqTgzq3HSxHT8Tr5j8jhWaP5sIvXSLRZAzpq5y6jYAsENlVwNG1AepH2PR9JoUYNmhOb8EMFQxYfOsq8pPUXEYAh0LktrtCrx46+448EYqEObk20ZgFoAbVZmX68QftjrkTlTVgBF7izL4lbj0ZIDa+7jm97PlrQKSCpnUZibidUkEdiUIIQWpGZTkLS4gzWIwmP/uJjQhf2G03gYt9rofu7H4v+aES4+RyKQ+jQkPSb66LloPKgBwKoufs8ORDcrig/obr8rQsZjsW9JTXwZ/HKvasRIWbsiWcSxhP6kGFQDm38EVNSC6R3Fureq1MILZz38SxdbshUEf4i7wbiI6sVypQfkpGDuva8NfamGUeXvj1lgDsrKruDPedkkOwgs3f+OxcbNOHWBweSxa9A/Fibf09JPTgDXmsY6ElC2LxuxsHs7eboDFddkaFwFrNKCqciq3z7LyxR8ImeGGmWZpQl1Xf66NLdmzCfkS9ySpYKUurbID5qCccbOPVkkSDe0QZxr+UB5Ap2al78xbWcqbHLn04kRficb6GOoJdSaJAz5ZYyqw7Jx2NyrCSU3MOfAU+u6Rrtx3KjlOXzA/2eoBUnypYtTvObL6OivcO0iE3ygmZZPL2zQvc8DyBbIrv0H2VoUvcU9kxgu3f8KMr9UGpkGeGbjAZ+ElgGV26nAmmlGQqemTC+b3AJST5JHururj3KrJjzduveWOi/Qm4ESNt6p2FxR9qOlhP61WuKP640MCaTAoGMgg7cw4YOXkRxq10hiWhS2M3NvaDz64Fbs+sEJ9dhChZ5In6A185IF7XwsFhyGStyXS78zwIvxKy1igS1N9ssORe5i1WyafupVFT+SE5/aRCkKeTNyThUlg/hsArlZwscEMJl2fJVFCGBUkBvrxJMHyCmVYlgf2ILrv+1R9MU3SsfR7j+BDYT1NwggQ+FJV3xlY26iJmQBgixGXQ7GN0VCLFEz845tTJ/i8YtqCVsKEyDKAJiY9q5tJIwoZtJiAK9M5h1tZ/Io+3WaG0AOLBJ2E9AQimZCHyvoy8CfSkHJIng/gCcm2Vv1OJu4JUDCvZKKrFS77dBDydel6/ODudc3hVwR+pzWfIpDMPYRmyER4R7kAu/ceqU2U+NDepmiImdNwhBszlmQCAKNMii9WpOi9/ArlDJabmuB012pPDikJSBLzdft1Dd6yyle/SiPuCcMZGp5FED51YhuwaHpNU5yuIaSuao0NhCBtPZkE9mpmI+iTnR4ClhUsO42AS480sFxDLs8oiWEaXVcxZQsYGdUOHtMwrVEtuQqaqoIGZAw2w5GpGavvqrKT7O69XyfQJT5L4I1YZfFyP36VTtwTY1xQvQHM37WQxB0CyzVzO+kqHxpczupW0UUJ1ks0mRUPOeNmHw1ireBqSPcQsIjECDC9m1zL00D4fti2oPg7MNamjeas3PCsngxerAhnWmDh2anfM+Ml39UJmmOHIuvtcPmTdjjyuB2evxqW+AikK7JD/VvYjtsgs5QQMQY2h7gnh3z2CcGazC1hnIBrDdR6UuYD7qa1H7UuiaJqH/5wHS4vS6j9eWPLekgrENXuFDBvrY3evD2RdDhVRY8AeCTlqisfaGfnFexvgVMdboUizf8+FuNDt6roGSYsJeDcZNcS59xRQvIrbODOVMzhUgSDQvvtLCnvgxDj0reH0jzX6QCdnhIk9aH6a0i+zGnYrrKD3U7Q1qVnEPeUfq8EYWyz5ybOCeLOhp9+Re9iXXm8NcAyZeztuAhI1ZwR0M/KF58gNH8NCF3iwDnwq8hF6o6ImRXvQ7iYQBe3QGTcBpQ8y+AlBPp9miVGxWpqJ9gdcvellDYTFZjG0DPjiCqN6EYnf2CFyx8miNa/IMD8IcW9cc7CKV8cWt2Wth5KRdwPZaTxleSvhiS3va5Y/mkSuLVbOZxUBHi47WD0ll1WOPI6Qf2CSsOe8TFJ/dml+0IQpfE9gR+hEaGPFezVP75z+2ow9qStlOENCcVfM7MsY5gvb9tb97tW6WzMdQDf68jqs5NB1VR2piLuiT55r61PH6OPfLAm1SP7bOVw6/hVkou8EymFAtoQ/RLSaslS6Z788YFVH8LFaKwo8Rj8WtqZ9oF2uYOg4FlM8AUWFk9znMqiGwC+Goy3W8BrtjDzgyRxslNRdJ9GLzsRjD2KY72KuCdaNCpBvFTz25SDmBN8LH/CY90IyNdda8SdVdmwg1tx8/sM73rVCy2Ni42B+90v1owD8ek6dKZXsKodrYZjOTu3mVb3Po9QVuQJfsupKLrIHF8+WQhRlmboR00XD3s2tqaSV651vP2dm/0R3ODMLjblFqJex+rIzB1BsMA4QMC3IGyG537oRKd+jp97C5Z1sAVGMOg0ELUn0D6W2OyaziI8O/V7ALBDkW+Vn5oCf+BUFA1oFcci8KvMqM0CsDwEg8KIx5ezbafHytG1z0+6ww5H1gNIeimUcgPU7sIY8GqzHhGd9q0DLEb90dZ856p4nwM8h/ojowWCkWNZCao0ieRwgGV27X6WJK8aQDQbY8nDkK4Hn5+62QpFNiZ/xpuAE+1Q+QnMeIUIKW8bSyGGobnAamtZa2z4vHrG3DpgCcNanc3OxoURATCZgOUATkgjYaPZk0vISC2fIeZhAO5pM/URBhZoIDVDIvnRyXtDZy9rQMtyRYY0Ov7N9rcA3p3mds9CcGaXNlMfcWNpPBbvT5ZI/imARYQ+9lVlJzl7616t/2xkSlYxCLmd88BpsgNB2CIwpM3SR7KVEIHPUuMNq1WitfjR+2zSSCyeth8Zgh/Zdoe8Yawk3mJYm7GPXMsNF/RgYC8zb0o/iFWfR9BxrEA7bq6o1/omzgMwE+BlAF2UxgpHWa68N24b69L0rM5t5j5yrbbith3Qvh2ubv8HsMQKBj8ouuMAAAAASUVORK5CYII=</resource>
    <resource name="gplv3-license-badge" extension="png">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</resource>
    <resource name="sustentarea-logo" extension="png"></resource>
    <resource name="sigmoid" extension="png"></resource>
    <resource name="logonia-sizes" extension="png"></resource>
  </resources>
</model>
